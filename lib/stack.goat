/*

Copyright (C) 2017, 2018 Ivan Kniazkov

This file is part of standard library for programming language
codenamed "Goat" ("Goat standard library").

Goat standard library is free software: you can redistribute it and/or
modify it under the terms of the GNU General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Goat standard library is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with Goat standard library.  If not, see <http://www.gnu.org/licenses/>.

*/

import "iterator.goat";

var Stack = Iterable -> {
	
	top : null,
	
	empty : $() {
		return top == null;
	},
	
	StackIsEmpty : Exception -> {
	},
	
	push : $(val) {
		top = {
			next : top,
			val : val
		};
	},
	
	pop : $() {
		if (top == null)
			throw new StackIsEmpty();
		var val = top.val;
		top = top.next;
		return val;
	},
	
	peek : $() {
		if (top == null)
			throw new StackIsEmpty();
		return top.val;
	},
	
	iterator : $() {
		return new Stack.Iterator(top);
	},
	
	Iterator : Iterator -> {
		
		item : null,
		
		init : $(item) {
			this.item = item;
		},
		
		valid : $() {
			return item != null;
		},
		
		next : $() {
			if (!item)
				throw new Exception.InvalidOperation();
			item = item.next;
		},
		
		read : $() {
			if (!item)
				throw new Exception.InvalidOperation();
			return item.val;
		},
		
		write : $(val) {
			if (!item)
				throw new Exception.InvalidOperation();
			item.val = val;
		}
	}
};